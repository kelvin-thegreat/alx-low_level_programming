!<arch>
#include "main.h"

int _putchar(char c)
{
    putchar(c);
    return 0;
}

int _islower(int c)
{
    return (c >= 'a' && c <= 'z');
}

int _isalpha(int c)
{
    return ((c >= 'a' && c <= 'z') || (c >= 'A' && c <= 'Z'));
}

int _abs(int n)
{
    return (n < 0 ? -n : n);
}

int _isupper(int c)
{
    return (c >= 'A' && c <= 'Z');
}

int _isdigit(int c)
{
    return (c >= '0' && c <= '9');
}

int _strlen(char *s)
{
    int i;
    for (i = 0; s[i] != '\0'; i++);
    return i;
}

void _puts(char *s)
{
    for (int i = 0; s[i] != '\0'; i++)
        putchar(s[i]);
    putchar('\n');
}

char *_strcpy(char *dest, char *src)
{
    int i;
    for (i = 0; src[i] != '\0'; i++)
        dest[i] = src[i];
    dest[i] = '\0';
    return dest;
}

int _atoi(char *s)
{
    int i, sign, num;

    for (i = 0; s[i] == ' ' || s[i] == '\n' || s[i] == '\t'; i++);
    sign = (s[i] == '-') ? -1 : 1;
    if (s[i] == '-' || s[i] == '+')
        i++;
    for (num = 0; s[i] >= '0' && s[i] <= '9'; i++)
        num = (num * 10) + (s[i] - '0');
    return sign * num;
}

char *_strcat(char *dest, char *src)
{
    int i, j;
    for (i = 0; dest[i] != '\0'; i++);
    for (j = 0; src[j] != '\0'; j++)
        dest[i + j] = src[j];
    dest[i + j] = '\0';
    return dest;
}

char *_strncat(char *dest, char *src, int n)
{
    int i, j;
    for (i = 0; dest[i] != '\0'; i++);
    for (j = 0; src[j] != '\0' && j < n; j++)
        dest[i + j] = src[j];
    dest[i + j] = '\0';
    return dest;
}

char *_strncpy(char *dest, char *src)
{



}
int _atoi(char *s)
{


}
char *_strcat(char *dest, char *src)
{



}
char *_strncat(char *dest, char *src, int n)
{


}
char *_strncpy(char *dest, char *src, int n)
{


}
int _strcmp(char *s1, char *s2)
{



}
char *_memset(char *s, char b, unsigned int n)
{



}
char *_memcpy(char *dest, char *src, unsigned int n)
{



}
char *_strchr(char *s, char c)
{



}
unsigned int _strspn(char *s, char *accept)
{



}
char *_strpbrk(char *s, char *accept)
{



}
char *_strstr(char *haystack, char *needle)
{


}
